
////
This file is generated! See _meta/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported Fields

[partintro]

--
This document describes the fields that are exported by Cloudfrontbeat. They are
grouped in the following categories:

* <<exported-fields-beat>>
* <<exported-fields-cloud>>
* <<exported-fields-cloudfrontbeat>>

--
[[exported-fields-beat]]
== Beat Fields

Contains common beat fields available in all event types.



[float]
=== beat.name

The name of the Beat sending the log messages. If the Beat name is set in the configuration file, then that value is used. If it is not set, the hostname is used. To set the Beat name, use the `name` option in the configuration file.


[float]
=== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


[float]
=== beat.version

The version of the beat that generated this event.


[float]
=== @timestamp

type: date

example: August 26th 2016, 12:35:53.332

format: date

required: True

The timestamp when the event log record was generated.


[float]
=== tags

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== fields

type: dict

Contains user configurable fields.


[[exported-fields-cloud]]
== Cloud Provider Metadata Fields

Metadata from cloud providers added by the add_cloud_metadata processor.



[float]
=== meta.cloud.provider

example: ec2

Name of the cloud provider. Possible values are ec2, gce, or digitalocean.


[float]
=== meta.cloud.instance_id

Instance ID of the host machine.


[float]
=== meta.cloud.machine_type

example: t2.medium

Machine type of the host machine.


[float]
=== meta.cloud.availability_zone

example: us-east-1c

Availability zone in which this host is running.


[float]
=== meta.cloud.project_id

example: project-x

Name of the project in Google Cloud.


[float]
=== meta.cloud.region

Region in which this host is running.


[[exported-fields-cloudfrontbeat]]
== cloudfrontbeat Fields

CloudFront log data with additional geo location



[float]
=== date

type: text

required: True

[float]
=== time

type: text

required: True

[float]
=== x_edge_location

type: text

[float]
=== sc_bytes

type: long

[float]
=== c_ip

type: text

[float]
=== cs_method

type: text

[float]
=== cs_host

type: text

[float]
=== cs_uri_stem

type: text

[float]
=== sc_status

type: short

[float]
=== cs_referer

type: text

[float]
=== cs_user_agent

type: text

[float]
=== cs_uri_query

type: text

[float]
=== cs_cookie

type: text

[float]
=== x_edge_result_type

type: text

[float]
=== x_edge_request_id

type: text

[float]
=== x_host_header

type: text

[float]
=== cs_protocol

type: text

[float]
=== cs_bytes

type: integer

[float]
=== time_taken

type: float

[float]
=== x_forwarded_for

type: text

[float]
=== ssl_protocol

type: text

[float]
=== ssl_cipher

type: text

[float]
=== x_edge_response_result_type

type: text

[float]
=== cs_protocol_version

type: text

[float]
=== geoip.country_code

type: text

[float]
=== geoip.country

type: text

[float]
=== geoip.region

type: text

[float]
=== geoip.city

type: text

[float]
=== geoip.continent_code

type: text

[float]
=== geoip.continent

type: text

[float]
=== geoip.latitude

type: double

[float]
=== geoip.longitude

type: double

[float]
=== geoip.location

type: geo_point

